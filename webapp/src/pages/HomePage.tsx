import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useTelegramApp } from '../hooks/useTelegramApp';
import { apiService } from '../services/api';
import { UserProfile } from '../types';
import './HomePage.css';

const HomePage: React.FC = () => {
  const navigate = useNavigate();
  const { user, hapticFeedback } = useTelegramApp();
  const [profile, setProfile] = useState<UserProfile | null>(null);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    const loadProfile = async () => {
      if (user) {
        try {
          const userProfile = await apiService.getProfile(user.id.toString());
          setProfile(userProfile);
        } catch (error) {
          console.error('Error loading profile:', error);
        } finally {
          setIsLoading(false);
        }
      } else {
        setIsLoading(false);
      }
    };

    loadProfile();
  }, [user]);

  const handleQuickAction = (action: string) => {
    hapticFeedback('light');
    switch (action) {
      case 'schedule':
        navigate('/schedule');
        break;
      case 'clubs':
        navigate('/clubs');
        break;
      case 'tests':
        navigate('/tests');
        break;
      case 'profile':
        navigate('/profile');
        break;
    }
  };

  const quickActions = [
    { id: 'schedule', title: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', icon: 'üìÖ', color: '#8b2635' },
    { id: 'clubs', title: '–ö–ª—É–±—ã', icon: 'üë•', color: '#d4a574' },
    { id: 'tests', title: '–¢–µ—Å—Ç—ã', icon: 'üìù', color: '#e8b4b8' },
    { id: 'profile', title: '–ü—Ä–æ—Ñ–∏–ª—å', icon: 'üë§', color: '#b8946f' },
  ];

  if (isLoading) {
    return (
      <div className="home-page">
        <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      </div>
    );
  }

  return (
    <div className="home-page">
      <div className="header">
        <h1>üéì –®–∫–æ–ª–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ</h1>
        <p className="welcome">
          –ü—Ä–∏–≤–µ—Ç, {user?.first_name || '—Å—Ç—É–¥–µ–Ω—Ç'}! üëã
        </p>
      </div>

      {profile && (
        <div className="profile-summary">
          <div className="progress-card">
            <div className="progress-info">
              <span className="level-badge">
                {profile.level === 'beginner' ? '–ù–∞—á–∞–ª—å–Ω—ã–π' : 
                 profile.level === 'advanced' ? '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π' : '–ù–µ –≤—ã–±—Ä–∞–Ω'}
              </span>
              <div className="progress-bar">
                <div 
                  className="progress-fill" 
                  style={{ width: `${profile.progress}%` }}
                ></div>
              </div>
              <span className="progress-text">{profile.progress}% –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</span>
            </div>
            <div className="stats">
              <div className="stat">
                <span className="stat-number">{profile.lessons_completed}</span>
                <span className="stat-label">—É—Ä–æ–∫–æ–≤</span>
              </div>
              <div className="stat">
                <span className="stat-number">{profile.points}</span>
                <span className="stat-label">–±–∞–ª–ª–æ–≤</span>
              </div>
              <div className="stat">
                <span className="stat-number">{profile.current_streak}</span>
                <span className="stat-label">–¥–Ω–µ–π –ø–æ–¥—Ä—è–¥</span>
              </div>
            </div>
          </div>
        </div>
      )}

      <div className="quick-actions">
        <h2>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
        <div className="actions-grid">
          {quickActions.map((action) => (
            <button
              key={action.id}
              className="action-card"
              onClick={() => handleQuickAction(action.id)}
              style={{ '--action-color': action.color } as React.CSSProperties}
            >
              <span className="action-icon">{action.icon}</span>
              <span className="action-title">{action.title}</span>
            </button>
          ))}
        </div>
      </div>

      <div className="features">
        <h2>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h2>
        <div className="features-list">
          <div className="feature-item">
            <span className="feature-icon">üìö</span>
            <div className="feature-content">
              <h3>–£—Ä–æ–∫–∏ –∏ —Ç–µ—Å—Ç—ã</h3>
              <p>–ò–∑—É—á–∞–π—Ç–µ –≥—Ä–∞–º–º–∞—Ç–∏–∫—É –∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ —Ç–µ—Å—Ç—ã</p>
            </div>
          </div>
          <div className="feature-item">
            <span className="feature-icon">üë•</span>
            <div className="feature-content">
              <h3>–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ –∫–ª—É–±—ã</h3>
              <p>–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Å –¥—Ä—É–≥–∏–º–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏</p>
            </div>
          </div>
          <div className="feature-item">
            <span className="feature-icon">üìä</span>
            <div className="feature-content">
              <h3>–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</h3>
              <p>–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–≤–æ–∏–º–∏ —É—Å–ø–µ—Ö–∞–º–∏ –≤ –æ–±—É—á–µ–Ω–∏–∏</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default HomePage; 